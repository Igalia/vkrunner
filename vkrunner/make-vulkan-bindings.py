#!/usr/bin/env python

# Copyright 2023 Neil Roberts

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

from __future__ import (
    absolute_import, division, print_function, unicode_literals
)

# This script is used to generate vulkan_bindings.rs from vulkan.h using
# bindgen. It is not run automatically as part of the build process
# but if need be it can be used to update the file as follows:
#
# ./make-vulkan-bindings.py [vulkan-header]
#
# If the vulkan header is not specified it will default to
# /usr/include/vulkan/vulkan.h

import re
import sys
import os
import subprocess


def get_copyright_blurb(vulkan_header):
    comment_prefix = None
    parts = []

    with open(vulkan_header, "rt", encoding="utf-8") as f:
        for line in f:
            line = line.rstrip()

            if comment_prefix is None:
                copyright_start = line.find("Copyright")

                if copyright_start == -1:
                    continue

                comment_prefix = line[:copyright_start].rstrip()
            else:
                if not line.startswith(comment_prefix):
                    break

            parts.append("// " + line[len(comment_prefix):].lstrip())

    return "\n".join(parts)


def main():
    try:
        vulkan_header = sys.argv[1]
    except IndexError:
        vulkan_header = "/usr/include/vulkan/vulkan.h"

    output_filename = os.path.join(os.path.dirname(sys.argv[0]),
                                   "vulkan_bindings.rs")

    with open(output_filename, "wt", encoding="utf-8") as f:
        print(get_copyright_blurb(vulkan_header), file=f)

        print("\n"
              "// Automatically generated by make-vulkan-bindings.py"
              "\n",
              file=f)

        converted_header = subprocess.check_output(
            ["bindgen",
             "--generate", "types,vars",
             "--no-prepend-enum-name",
             "--allowlist-type", "^(PFN|Vk).*",
             "--allowlist-var", "^VK_.*",
             "--with-derive-default",
             vulkan_header],
            encoding="utf-8")

        print(converted_header, file=f, end='')


if __name__ == '__main__':
    main()
