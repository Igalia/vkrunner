// Automatically generated by make-enums.py
static ENUM_VALUES: [EnumValue; 137] = [
    EnumValue {
        name: "VK_BLEND_FACTOR_CONSTANT_ALPHA",
        value: vk::VK_BLEND_FACTOR_CONSTANT_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_CONSTANT_COLOR",
        value: vk::VK_BLEND_FACTOR_CONSTANT_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_DST_ALPHA",
        value: vk::VK_BLEND_FACTOR_DST_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_DST_COLOR",
        value: vk::VK_BLEND_FACTOR_DST_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_MAX_ENUM",
        value: vk::VK_BLEND_FACTOR_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE",
        value: vk::VK_BLEND_FACTOR_ONE as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR",
        value: vk::VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_SRC1_ALPHA",
        value: vk::VK_BLEND_FACTOR_SRC1_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_SRC1_COLOR",
        value: vk::VK_BLEND_FACTOR_SRC1_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_SRC_ALPHA",
        value: vk::VK_BLEND_FACTOR_SRC_ALPHA as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_SRC_ALPHA_SATURATE",
        value: vk::VK_BLEND_FACTOR_SRC_ALPHA_SATURATE as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_SRC_COLOR",
        value: vk::VK_BLEND_FACTOR_SRC_COLOR as i32
    },
    EnumValue {
        name: "VK_BLEND_FACTOR_ZERO",
        value: vk::VK_BLEND_FACTOR_ZERO as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_ADD",
        value: vk::VK_BLEND_OP_ADD as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_BLUE_EXT",
        value: vk::VK_BLEND_OP_BLUE_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_COLORBURN_EXT",
        value: vk::VK_BLEND_OP_COLORBURN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_COLORDODGE_EXT",
        value: vk::VK_BLEND_OP_COLORDODGE_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_CONTRAST_EXT",
        value: vk::VK_BLEND_OP_CONTRAST_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DARKEN_EXT",
        value: vk::VK_BLEND_OP_DARKEN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DIFFERENCE_EXT",
        value: vk::VK_BLEND_OP_DIFFERENCE_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DST_ATOP_EXT",
        value: vk::VK_BLEND_OP_DST_ATOP_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DST_EXT",
        value: vk::VK_BLEND_OP_DST_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DST_IN_EXT",
        value: vk::VK_BLEND_OP_DST_IN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DST_OUT_EXT",
        value: vk::VK_BLEND_OP_DST_OUT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_DST_OVER_EXT",
        value: vk::VK_BLEND_OP_DST_OVER_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_EXCLUSION_EXT",
        value: vk::VK_BLEND_OP_EXCLUSION_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_GREEN_EXT",
        value: vk::VK_BLEND_OP_GREEN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HARDLIGHT_EXT",
        value: vk::VK_BLEND_OP_HARDLIGHT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HARDMIX_EXT",
        value: vk::VK_BLEND_OP_HARDMIX_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HSL_COLOR_EXT",
        value: vk::VK_BLEND_OP_HSL_COLOR_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HSL_HUE_EXT",
        value: vk::VK_BLEND_OP_HSL_HUE_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HSL_LUMINOSITY_EXT",
        value: vk::VK_BLEND_OP_HSL_LUMINOSITY_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_HSL_SATURATION_EXT",
        value: vk::VK_BLEND_OP_HSL_SATURATION_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_INVERT_EXT",
        value: vk::VK_BLEND_OP_INVERT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_INVERT_OVG_EXT",
        value: vk::VK_BLEND_OP_INVERT_OVG_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_INVERT_RGB_EXT",
        value: vk::VK_BLEND_OP_INVERT_RGB_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_LIGHTEN_EXT",
        value: vk::VK_BLEND_OP_LIGHTEN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_LINEARBURN_EXT",
        value: vk::VK_BLEND_OP_LINEARBURN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_LINEARDODGE_EXT",
        value: vk::VK_BLEND_OP_LINEARDODGE_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_LINEARLIGHT_EXT",
        value: vk::VK_BLEND_OP_LINEARLIGHT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MAX",
        value: vk::VK_BLEND_OP_MAX as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MAX_ENUM",
        value: vk::VK_BLEND_OP_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MIN",
        value: vk::VK_BLEND_OP_MIN as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MINUS_CLAMPED_EXT",
        value: vk::VK_BLEND_OP_MINUS_CLAMPED_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MINUS_EXT",
        value: vk::VK_BLEND_OP_MINUS_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_MULTIPLY_EXT",
        value: vk::VK_BLEND_OP_MULTIPLY_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_OVERLAY_EXT",
        value: vk::VK_BLEND_OP_OVERLAY_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_PINLIGHT_EXT",
        value: vk::VK_BLEND_OP_PINLIGHT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT",
        value: vk::VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_PLUS_CLAMPED_EXT",
        value: vk::VK_BLEND_OP_PLUS_CLAMPED_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_PLUS_DARKER_EXT",
        value: vk::VK_BLEND_OP_PLUS_DARKER_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_PLUS_EXT",
        value: vk::VK_BLEND_OP_PLUS_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_RED_EXT",
        value: vk::VK_BLEND_OP_RED_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_REVERSE_SUBTRACT",
        value: vk::VK_BLEND_OP_REVERSE_SUBTRACT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SCREEN_EXT",
        value: vk::VK_BLEND_OP_SCREEN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SOFTLIGHT_EXT",
        value: vk::VK_BLEND_OP_SOFTLIGHT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SRC_ATOP_EXT",
        value: vk::VK_BLEND_OP_SRC_ATOP_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SRC_EXT",
        value: vk::VK_BLEND_OP_SRC_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SRC_IN_EXT",
        value: vk::VK_BLEND_OP_SRC_IN_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SRC_OUT_EXT",
        value: vk::VK_BLEND_OP_SRC_OUT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SRC_OVER_EXT",
        value: vk::VK_BLEND_OP_SRC_OVER_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_SUBTRACT",
        value: vk::VK_BLEND_OP_SUBTRACT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_VIVIDLIGHT_EXT",
        value: vk::VK_BLEND_OP_VIVIDLIGHT_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_XOR_EXT",
        value: vk::VK_BLEND_OP_XOR_EXT as i32
    },
    EnumValue {
        name: "VK_BLEND_OP_ZERO_EXT",
        value: vk::VK_BLEND_OP_ZERO_EXT as i32
    },
    EnumValue {
        name: "VK_COLOR_COMPONENT_A_BIT",
        value: vk::VK_COLOR_COMPONENT_A_BIT as i32
    },
    EnumValue {
        name: "VK_COLOR_COMPONENT_B_BIT",
        value: vk::VK_COLOR_COMPONENT_B_BIT as i32
    },
    EnumValue {
        name: "VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM",
        value: vk::VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_COLOR_COMPONENT_G_BIT",
        value: vk::VK_COLOR_COMPONENT_G_BIT as i32
    },
    EnumValue {
        name: "VK_COLOR_COMPONENT_R_BIT",
        value: vk::VK_COLOR_COMPONENT_R_BIT as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_ALWAYS",
        value: vk::VK_COMPARE_OP_ALWAYS as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_EQUAL",
        value: vk::VK_COMPARE_OP_EQUAL as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_GREATER",
        value: vk::VK_COMPARE_OP_GREATER as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_GREATER_OR_EQUAL",
        value: vk::VK_COMPARE_OP_GREATER_OR_EQUAL as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_LESS",
        value: vk::VK_COMPARE_OP_LESS as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_LESS_OR_EQUAL",
        value: vk::VK_COMPARE_OP_LESS_OR_EQUAL as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_MAX_ENUM",
        value: vk::VK_COMPARE_OP_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_NEVER",
        value: vk::VK_COMPARE_OP_NEVER as i32
    },
    EnumValue {
        name: "VK_COMPARE_OP_NOT_EQUAL",
        value: vk::VK_COMPARE_OP_NOT_EQUAL as i32
    },
    EnumValue {
        name: "VK_CULL_MODE_BACK_BIT",
        value: vk::VK_CULL_MODE_BACK_BIT as i32
    },
    EnumValue {
        name: "VK_CULL_MODE_FLAG_BITS_MAX_ENUM",
        value: vk::VK_CULL_MODE_FLAG_BITS_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_CULL_MODE_FRONT_AND_BACK",
        value: vk::VK_CULL_MODE_FRONT_AND_BACK as i32
    },
    EnumValue {
        name: "VK_CULL_MODE_FRONT_BIT",
        value: vk::VK_CULL_MODE_FRONT_BIT as i32
    },
    EnumValue {
        name: "VK_CULL_MODE_NONE",
        value: vk::VK_CULL_MODE_NONE as i32
    },
    EnumValue {
        name: "VK_FRONT_FACE_CLOCKWISE",
        value: vk::VK_FRONT_FACE_CLOCKWISE as i32
    },
    EnumValue {
        name: "VK_FRONT_FACE_COUNTER_CLOCKWISE",
        value: vk::VK_FRONT_FACE_COUNTER_CLOCKWISE as i32
    },
    EnumValue {
        name: "VK_FRONT_FACE_MAX_ENUM",
        value: vk::VK_FRONT_FACE_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_AND",
        value: vk::VK_LOGIC_OP_AND as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_AND_INVERTED",
        value: vk::VK_LOGIC_OP_AND_INVERTED as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_AND_REVERSE",
        value: vk::VK_LOGIC_OP_AND_REVERSE as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_CLEAR",
        value: vk::VK_LOGIC_OP_CLEAR as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_COPY",
        value: vk::VK_LOGIC_OP_COPY as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_COPY_INVERTED",
        value: vk::VK_LOGIC_OP_COPY_INVERTED as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_EQUIVALENT",
        value: vk::VK_LOGIC_OP_EQUIVALENT as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_INVERT",
        value: vk::VK_LOGIC_OP_INVERT as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_MAX_ENUM",
        value: vk::VK_LOGIC_OP_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_NAND",
        value: vk::VK_LOGIC_OP_NAND as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_NOR",
        value: vk::VK_LOGIC_OP_NOR as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_NO_OP",
        value: vk::VK_LOGIC_OP_NO_OP as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_OR",
        value: vk::VK_LOGIC_OP_OR as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_OR_INVERTED",
        value: vk::VK_LOGIC_OP_OR_INVERTED as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_OR_REVERSE",
        value: vk::VK_LOGIC_OP_OR_REVERSE as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_SET",
        value: vk::VK_LOGIC_OP_SET as i32
    },
    EnumValue {
        name: "VK_LOGIC_OP_XOR",
        value: vk::VK_LOGIC_OP_XOR as i32
    },
    EnumValue {
        name: "VK_POLYGON_MODE_FILL",
        value: vk::VK_POLYGON_MODE_FILL as i32
    },
    EnumValue {
        name: "VK_POLYGON_MODE_FILL_RECTANGLE_NV",
        value: vk::VK_POLYGON_MODE_FILL_RECTANGLE_NV as i32
    },
    EnumValue {
        name: "VK_POLYGON_MODE_LINE",
        value: vk::VK_POLYGON_MODE_LINE as i32
    },
    EnumValue {
        name: "VK_POLYGON_MODE_MAX_ENUM",
        value: vk::VK_POLYGON_MODE_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_POLYGON_MODE_POINT",
        value: vk::VK_POLYGON_MODE_POINT as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_LINE_LIST",
        value: vk::VK_PRIMITIVE_TOPOLOGY_LINE_LIST as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY",
        value: vk::VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP",
        value: vk::VK_PRIMITIVE_TOPOLOGY_LINE_STRIP as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY",
        value: vk::VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_MAX_ENUM",
        value: vk::VK_PRIMITIVE_TOPOLOGY_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_PATCH_LIST",
        value: vk::VK_PRIMITIVE_TOPOLOGY_PATCH_LIST as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_POINT_LIST",
        value: vk::VK_PRIMITIVE_TOPOLOGY_POINT_LIST as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN",
        value: vk::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST",
        value: vk::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY",
        value: vk::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP",
        value: vk::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP as i32
    },
    EnumValue {
        name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY",
        value: vk::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_DECREMENT_AND_CLAMP",
        value: vk::VK_STENCIL_OP_DECREMENT_AND_CLAMP as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_DECREMENT_AND_WRAP",
        value: vk::VK_STENCIL_OP_DECREMENT_AND_WRAP as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_INCREMENT_AND_CLAMP",
        value: vk::VK_STENCIL_OP_INCREMENT_AND_CLAMP as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_INCREMENT_AND_WRAP",
        value: vk::VK_STENCIL_OP_INCREMENT_AND_WRAP as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_INVERT",
        value: vk::VK_STENCIL_OP_INVERT as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_KEEP",
        value: vk::VK_STENCIL_OP_KEEP as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_MAX_ENUM",
        value: vk::VK_STENCIL_OP_MAX_ENUM as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_REPLACE",
        value: vk::VK_STENCIL_OP_REPLACE as i32
    },
    EnumValue {
        name: "VK_STENCIL_OP_ZERO",
        value: vk::VK_STENCIL_OP_ZERO as i32
    },
];
