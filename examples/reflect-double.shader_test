[require]
shaderFloat64

[vertex shader passthrough]

[fragment shader]
#version 430

layout(std140, push_constant) uniform block {
        dvec2 arg0;
        dvec2 arg1;
        double tolerance;
        dvec2 expected;
};

layout(location = 0) out vec4 color_out;

void
main()
{
        dvec2 result = reflect(arg0, arg1);

        color_out = (distance(result, expected) <= tolerance ?
                     vec4(0.0, 1.0, 0.0, 1.0) :
                     vec4(1.0, 0.0, 0.0, 1.0));
}

[test]
clear color 0.0 0.0 1.0 0.0
clear

uniform dvec2 0 -0.10000000000000001 -1.2
uniform dvec2 16 -0.083045479853739973 -0.99654575824487956
uniform dvec2 48 0.099999999999999978 1.1999999999999995
uniform double 32 1.2041594578792292e-05
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
uniform dvec2 0 -0.10000000000000001 -1.2
uniform dvec2 16 -0.65850460786851817 0.75257669470687794
uniform dvec2 48 -1.2026548672566375 0.060176991150442838
uniform double 32 1.2041594578792299e-05
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
uniform dvec2 0 -0.41999999999999998 0.47999999999999998
uniform dvec2 16 -0.083045479853739973 -0.99654575824487956
uniform dvec2 48 -0.49365517241379309 -0.40386206896551724
uniform double 32 6.3780874876407897e-06
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
uniform dvec2 0 -0.41999999999999998 0.47999999999999998
uniform dvec2 16 -0.65850460786851817 0.75257669470687794
uniform dvec2 48 0.42000000000000032 -0.48000000000000043
uniform double 32 6.3780874876407965e-06
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
