[require]
depthstencil D24_UNORM_S8_UINT

[vertex shader]
#version 450

layout(location = 0) in vec4 pos;
layout(location = 1) in vec4 color_in;
layout(location = 0) out vec4 color_out;

void
main()
{
        gl_Position = pos;
        color_out = color_in;
}

[fragment shader]
#version 450

layout(location = 0) in vec4 color_in;
layout(location = 0) out vec4 color_out;

void
main()
{
        color_out = color_in;
}

[indices]
0 1 2 2 1 3
4 5 6 6 5 7

[vertex data]
0/R32G32B32_SFLOAT  1/R8G8B8_UNORM
-1    -1 0.25       255 0 0
0.25  -1 0.25       255 0 0
-1    1  0.25       255 0 0
0.25  1  0.25       255 0 0

-0.25 -1 0.5        0 255 0
1     -1 0.5        0 255 0
-0.25 1  0.5        0 255 0
1     1  0.5        0 255 0

0.25  -1 0.0        255 255 255
1     -1 0.0        255 255 255
 0.25 0  0.0        255 255 255
1     0  0.0        255 255 255

-1    -1 0.0        0 0 255
1     -1 0.0        0 0 255
-1    1  0.0        0 0 255
1     1  0.0        0 0 255

[test]
clear

# Draw two overlapping triangles, one behind the other using depth testing
depthTestEnable true
depthWriteEnable true
depthCompareOp VK_COMPARE_OP_LESS
draw arrays indexed TRIANGLE_LIST 0 12

# Stencil out a rectangle in the top-right
depthTestEnable false
depthWriteEnable false
stencilTestEnable true
frontFace VK_FRONT_FACE_CLOCKWISE
front.passOp VK_STENCIL_OP_REPLACE
front.reference 1
front.compareOp VK_COMPARE_OP_ALWAYS
draw arrays indexed TRIANGLE_LIST 8 6

# Fill the entire framebuffer with a rectangle filtered by the stencil buffer
front.compareOp VK_COMPARE_OP_EQUAL
draw arrays indexed TRIANGLE_LIST 12 6

relative probe rect rgb (0.0, 0.0, 0.625, 1.0) (1.0, 0.0, 0.0)
relative probe rect rgb (0.625, 0.5, 0.375, 0.5) (0.0, 1.0, 0.0)
relative probe rect rgb (0.625, 0.0, 0.375, 0.5) (0.0, 0.0, 1.0)
