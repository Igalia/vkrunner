[comment]
// Source code in OpenCL C:

const sampler_t copyImageToBufferSampler = CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_NONE | CLK_FILTER_NEAREST;
__kernel void main(
   __read_only image2d_t inImage,
   __global float4* outDest,
   int inWidth,
   int inHeight)
{
   int x = (int)get_global_id(0);
   int y = (int)get_global_id(1);
   if (x < inWidth && y < inHeight)
   {
       outDest[(y * inWidth) + x] = read_imagef(inImage, copyImageToBufferSampler, (float2)(x, y));
   }
}

// This SPIR-V code was generated by compiling the above code with CLSPV

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 65
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %39 "main" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %30 SpecId 0
               OpDecorate %31 SpecId 1
               OpDecorate %32 SpecId 2
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %_struct_7 0 Offset 0
               OpDecorate %_struct_7 Block
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 Block
               OpDecorate %28 DescriptorSet 0
               OpDecorate %28 Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %35 DescriptorSet 1
               OpDecorate %35 Binding 0
               OpDecorate %35 NonWritable
               OpDecorate %36 DescriptorSet 1
               OpDecorate %36 Binding 1
               OpDecorate %37 DescriptorSet 1
               OpDecorate %37 Binding 2
               OpDecorate %38 DescriptorSet 1
               OpDecorate %38 Binding 3
      %float = OpTypeFloat 32
          %2 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_2 = OpTypePointer UniformConstant %2
    %v4float = OpTypeVector %float 4
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
  %_struct_7 = OpTypeStruct %_runtimearr_v4float
%_ptr_StorageBuffer__struct_7 = OpTypePointer StorageBuffer %_struct_7
       %uint = OpTypeInt 32 0
 %_struct_10 = OpTypeStruct %uint
%_ptr_StorageBuffer__struct_10 = OpTypePointer StorageBuffer %_struct_10
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
       %bool = OpTypeBool
    %v2float = OpTypeVector %float 2
         %20 = OpTypeSampler
%_ptr_UniformConstant_20 = OpTypePointer UniformConstant %20
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
         %23 = OpTypeSampledImage %2
    %float_0 = OpConstant %float 0
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %27 = OpUndef %v2float
         %28 = OpVariable %_ptr_UniformConstant_20 UniformConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %30 = OpSpecConstant %uint 1
         %31 = OpSpecConstant %uint 1
         %32 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %30 %31 %32
         %34 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %35 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %36 = OpVariable %_ptr_StorageBuffer__struct_7 StorageBuffer
         %37 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %38 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %39 = OpFunction %void None %14
         %40 = OpLabel
         %41 = OpLoad %2 %35
         %42 = OpAccessChain %_ptr_StorageBuffer_uint %37 %uint_0
         %43 = OpLoad %uint %42
         %44 = OpAccessChain %_ptr_StorageBuffer_uint %38 %uint_0
         %45 = OpLoad %uint %44
         %46 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %47 = OpLoad %uint %46
         %48 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
         %49 = OpLoad %uint %48
         %50 = OpSLessThan %bool %47 %43
         %51 = OpSLessThan %bool %49 %45
         %52 = OpLogicalAnd %bool %50 %51
               OpSelectionMerge %64 None
               OpBranchConditional %52 %53 %64
         %53 = OpLabel
         %54 = OpLoad %20 %28
         %55 = OpConvertSToF %float %47
         %56 = OpCompositeInsert %v2float %55 %27 0
         %57 = OpConvertSToF %float %49
         %58 = OpCompositeInsert %v2float %57 %56 1
         %59 = OpSampledImage %23 %41 %54
         %60 = OpImageSampleExplicitLod %v4float %59 %58 Lod %float_0
         %61 = OpIMul %uint %49 %43
         %62 = OpIAdd %uint %61 %47
         %63 = OpAccessChain %_ptr_StorageBuffer_v4float %36 %uint_0 %62
               OpStore %63 %60
               OpBranch %64
         %64 = OpLabel
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# image [set:bind] (width, height) format color
#   --> color must be one of rgbw, red, green, or blue
image 1:0 (4, 4) R8G8B8A8_UNORM green

# ssbo [set:bind] subdata [type] [offset] [values ...]
ssbo 1:1 subdata vec4 0 1.0 2.0 3.0 4.0 1.0 2.0 3.0 4.0 1.0 2.0 3.0 4.0 1.0 2.0 3.0 4.0
ssbo 1:2 subdata int 0 4
ssbo 1:3 subdata int 0 4

# *** Sampler related commands ***
#
# 1. Create default sampler
# sampler [set:bind]
# e.g.,
# sampler 0:0
#
# 2. Change filter attributes
# sampler filter [set:bind] [magFilter] [minFilter]
# e.g.,
# sampler filter 0:0 VK_FILTER_NEAREST VK_FILTER_NEAREST
#
# 3. Change mipmap mode
# sampler mipmap [set:bind] [mipmapMode]
# e.g.,
# sampler mipmap 0:0 VK_SAMPLER_MIPMAP_MODE_NEAREST
#
# 4. Change address modes for U, V, and W
# sampler address [set:bind] [addressModeU] [addressModeV] [addressModeW]
# e.g.,
# sampler address 0:0 VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT
#
# 5. Change unnormalizedCoordinates
# sampler norm [set:bind] [normalizedCoordinates]
#   --> normalizedCoordinates must be 0 for unnormalizedCoordinates = VK_TRUE
#                                 and 1 for unnormalizedCoordinates = VK_FALSE
# e.g.,
# sampler norm 0:0 0
#   --> it means setting "unnormalizedCoordinates" attribute as VK_TRUE
# sampler norm 0:0 1
#   --> it means setting "unnormalizedCoordinates" attribute as VK_FALSE
#
# 6. Change level of detail i.e., Lod
# sampler lod [set:bind] [minLod] [maxLod] [mipLodBias]
#   --> minLod, maxLod, and mipLodBias must be float values
# e.g.,
# sampler lod 0:0 0.0 0.0 0.0
#
# 7. Change other attributes
# sampler extra [set:bind] [maxAnisotropy] [compareOp] [borderColor]
# e.g.,
# sampler extra 0:0 1 VK_COMPARE_OP_NEVER VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE

sampler 0:0
sampler filter 0:0 VK_FILTER_NEAREST VK_FILTER_NEAREST
sampler address 0:0 VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT
sampler norm 0:0 0

compute 4 1 1

# probe ssbo [tyep] [set:bind] [offset] == [values ...]
probe ssbo vec4 1:1 0 == 1.0 0.0 0.0 1.0
