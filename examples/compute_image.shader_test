[comment]
// Source code in OpenCL C:

const sampler_t sampler =
CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_REPEAT | CLK_FILTER_NEAREST;

kernel void main(global float* out,
                 global float* in,
                 __read_only image2d_t inImage) {
  uint i = get_global_id(0);
  float sum = 0.0f;
  for (int j = 0; j < 4;++j)
    sum += read_imagef(inImage, sampler, (float2)((float)i, (float)i))[j];
  out[i] = in[i] + 100.0f * sum;
}

// This SPIR-V code was generated by compiling the above code with CLSPV

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 67
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %35 "main" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %27 SpecId 0
               OpDecorate %28 SpecId 1
               OpDecorate %29 SpecId 2
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %_struct_5 0 Offset 0
               OpDecorate %_struct_5 Block
               OpDecorate %25 DescriptorSet 0
               OpDecorate %25 Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %32 DescriptorSet 1
               OpDecorate %32 Binding 0
               OpDecorate %33 DescriptorSet 1
               OpDecorate %33 Binding 1
               OpDecorate %34 DescriptorSet 1
               OpDecorate %34 Binding 2
               OpDecorate %34 NonWritable
      %float = OpTypeFloat 32
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_runtimearr_float = OpTypeRuntimeArray %float
  %_struct_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer__struct_5 = OpTypePointer StorageBuffer %_struct_5
          %7 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_7 = OpTypePointer UniformConstant %7
       %uint = OpTypeInt 32 0
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
    %v2float = OpTypeVector %float 2
    %v4float = OpTypeVector %float 4
         %17 = OpTypeSampler
%_ptr_UniformConstant_17 = OpTypePointer UniformConstant %17
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
         %20 = OpTypeSampledImage %7
    %float_0 = OpConstant %float 0
     %uint_0 = OpConstant %uint 0
         %23 = OpUndef %v2float
  %float_100 = OpConstant %float 100
         %25 = OpVariable %_ptr_UniformConstant_17 UniformConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %27 = OpSpecConstant %uint 1
         %28 = OpSpecConstant %uint 1
         %29 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %27 %28 %29
         %31 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %32 = OpVariable %_ptr_StorageBuffer__struct_5 StorageBuffer
         %33 = OpVariable %_ptr_StorageBuffer__struct_5 StorageBuffer
         %34 = OpVariable %_ptr_UniformConstant_7 UniformConstant
         %35 = OpFunction %void None %11
         %36 = OpLabel
         %37 = OpLoad %7 %34
         %38 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %39 = OpLoad %uint %38
         %40 = OpConvertUToF %float %39
         %41 = OpCompositeInsert %v2float %40 %23 0
         %42 = OpVectorShuffle %v2float %41 %23 0 0
         %43 = OpLoad %17 %25
         %44 = OpSampledImage %20 %37 %43
         %45 = OpImageSampleExplicitLod %v4float %44 %42 Lod %float_0
         %46 = OpCompositeExtract %float %45 0
         %47 = OpFAdd %float %46 %float_0
         %48 = OpLoad %17 %25
         %49 = OpSampledImage %20 %37 %48
         %50 = OpImageSampleExplicitLod %v4float %49 %42 Lod %float_0
         %51 = OpCompositeExtract %float %50 1
         %52 = OpFAdd %float %47 %51
         %53 = OpLoad %17 %25
         %54 = OpSampledImage %20 %37 %53
         %55 = OpImageSampleExplicitLod %v4float %54 %42 Lod %float_0
         %56 = OpCompositeExtract %float %55 2
         %57 = OpFAdd %float %52 %56
         %58 = OpLoad %17 %25
         %59 = OpSampledImage %20 %37 %58
         %60 = OpImageSampleExplicitLod %v4float %59 %42 Lod %float_0
         %61 = OpCompositeExtract %float %60 3
         %62 = OpFAdd %float %57 %61
         %63 = OpAccessChain %_ptr_StorageBuffer_float %33 %uint_0 %39
         %64 = OpLoad %float %63
         %65 = OpExtInst %float %1 Fma %62 %float_100 %64
         %66 = OpAccessChain %_ptr_StorageBuffer_float %32 %uint_0 %39
               OpStore %66 %65
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [set:bind] subdata [type] [offset] [values ...]
ssbo 1:0 subdata float 0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0
ssbo 1:1 subdata float 0 101.0 102.0 103.0 104.0 105.0 106.0 107.0 108.0

# sampler
# combined
# image
# image storage
# utex
# stex
# ubo  --> uniform buffer
# ssbo --> storage buffer

# image set:bind (width, height) format color
# "color": rgbw or a single color e.g., 0xff0000ff for R8G8B8A8_UNORM
image 1:2 (8, 8) R8G8B8A8_UNORM rgbw

# combined set:bind (width, height) format color
# image storage set:bind (width, height) format color

# Setup sampler
# "combined" can be setup in this way too
sampler 0:0

# sampler filter [set:bind] [magFilter] [minFilter]
sampler filter 0:0 VK_FILTER_NEAREST VK_FILTER_NEAREST

# sampler mipmap [set:bind] [mipmapMode]
sampler mipmap 0:0 VK_SAMPLER_MIPMAP_MODE_NEAREST

# sampler address [set:bind] [addressModeU] [addressModeV] [addressModeW]
sampler address 0:0 VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT VK_SAMPLER_ADDRESS_MODE_REPEAT

# sampler norm [set:bind] [normalizedCoordinates]
# normalizedCoordinates: 0 for unnormalizedCoordinates = VK_TRUE
#                        1 for unnormalizedCoordinates = VK_FALSE
sampler norm 0:0 0

# sampler lod [set:bind] [minLod] [maxLod] [mipLodBias]
# minLod, maxLod, mipLodBias are float values
#
# sampler lod 0:0 0.0 0.0 0.0

# sampler extra [set:bind] [maxAnisotropy] [compareOp] [borderColor]
#
# sampler extra 0:0 1 VK_COMPARE_OP_NEVER VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE

compute 8 1 1

# probe ssbo [tyep] [set:bind] [offset] == [values ...]
probe ssbo float 1:0 0 == 301.0
probe ssbo float 1:1 0 == 101.0
