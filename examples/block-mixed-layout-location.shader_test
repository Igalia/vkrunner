# Test that interface block members are correctly matched by explicit
# location.

[vertex shader spirv]
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %name %_ %piglit_vertex
               OpSource GLSL 440
               OpName %main "main"
               OpName %block "block"
               OpMemberName %block 0 "c"
               OpMemberName %block 1 "d"
               OpMemberName %block 2 "a"
               OpMemberName %block 3 "b"
               OpName %name "name"
               OpName %gl_PerVertex "gl_PerVertex"
               OpMemberName %gl_PerVertex 0 "gl_Position"
               OpMemberName %gl_PerVertex 1 "gl_PointSize"
               OpMemberName %gl_PerVertex 2 "gl_ClipDistance"
               OpName %_ ""
               OpName %piglit_vertex "piglit_vertex"
; The block is given a location of 2. The first two members donâ€™t
; have a location so they should be derived from the block location.
               OpDecorate %name Location 2
; The 3rd member has an explicit location. The 4th member should be
; derived from this.
               OpMemberDecorate %block 2 Location 0
               OpDecorate %block Block
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %piglit_vertex Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
      %block = OpTypeStruct %v4float %v4float %v4float %v4float
%_ptr_Output_block = OpTypePointer Output %block
       %name = OpVariable %_ptr_Output_block Output
        %int = OpTypeInt 32 1
      %int_2 = OpConstant %int 2
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %15 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %int_3 = OpConstant %int 3
         %19 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
      %int_0 = OpConstant %int 0
         %22 = OpConstantComposite %v4float %float_0 %float_0 %float_1 %float_1
      %int_1 = OpConstant %int 1
         %25 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
%_ptr_Input_v4float = OpTypePointer Input %v4float
%piglit_vertex = OpVariable %_ptr_Input_v4float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %_ptr_Output_v4float %name %int_2
               OpStore %17 %15
         %20 = OpAccessChain %_ptr_Output_v4float %name %int_3
               OpStore %20 %19
         %23 = OpAccessChain %_ptr_Output_v4float %name %int_0
               OpStore %23 %22
         %26 = OpAccessChain %_ptr_Output_v4float %name %int_1
               OpStore %26 %25
         %35 = OpLoad %v4float %piglit_vertex
         %36 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %36 %35
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 440

layout(location = 0) in vec4 a;
layout(location = 1) in vec4 b;
layout(location = 2) in vec4 c;
layout(location = 3) in vec4 d;

layout(std140, push_constant) uniform block {
        int i;
};

layout(location = 0) out vec4 color;

void main()
{
        if (i == 0) {
                color = a;
        } else if (i == 1) {
                color = b;
        } else if (i == 2) {
                color = c;
        } else if (i == 3) {
                color = d;
        }
}

[test]
uniform int 0 0
draw rect -1 -1 1 1
relative probe rect rgb (0.0, 0.0, 0.5, 0.5) (1.0, 0.0, 0.0)

uniform int 0 1
draw rect 0 -1 1 1
relative probe rect rgb (0.5, 0.0, 0.5, 0.5) (0.0, 1.0, 0.0)

uniform int 0 2
draw rect -1 0 1 1
relative probe rect rgb (0.0, 0.5, 0.5, 0.5) (0.0, 0.0, 1.0)

uniform int 0 3
draw rect 0 0 1 1
relative probe rect rgb (0.5, 0.5, 0.5, 0.5) (1.0, 1.0, 1.0)
